<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="9:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fdd2ca2f790"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fdd2cc23bd0"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x7fdd2cc23bd0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x7fdd2cc1fdc0"/></to>
    </wire>
    <wire loc="10:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x7fdd2ca3e8d0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c81c140"/></to>
    </wire>
    <wire loc="52:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdd2c81c140"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9e1aa0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x7fdd2ca3bdf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c816b00"/></to>
    </wire>
    <wire loc="52:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdd2c816b00"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9e1aa0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x7fdd2ca35340"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c80f490"/></to>
    </wire>
    <wire loc="52:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdd2c80f490"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9e1aa0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdd2ca220d0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdd2ca4a830"/></to>
    </wire>
    <wire loc="51:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x7fdd2ca4a830"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x7fdd2ca152a0"/></to>
    </wire>
    <wire loc="53:/home/aj/w/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdd2cc21160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2c9da7a0"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fdd2ca58470"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fdd2cd30510"/></to>
    </wire>
    <wire loc="53:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x7fdd2cd30510"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x7fdd2cc628a0"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2ca57020"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2cc1ea70"/></to>
    </wire>
    <wire loc="58:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdd2cc1ea70"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2cc19cf0"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x7fdd2ca57720"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x7fdd2cc21160"/></to>
    </wire>
    <wire loc="59:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fdd2cc15c30"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fdd2ca78690"/></to>
    </wire>
    <wire loc="61:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x7fdd2cc12b00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2ca78020"/></to>
    </wire>
    <wire loc="54:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fdd2cc12400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2c9f1920"/></to>
    </wire>
    <wire loc="62:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="MoteInit" scoped="" ref="0x7fdd2cc12400"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2cc144a0"/></to>
    </wire>
    <wire loc="46:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2cc144a0"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2cc090e0"/></to>
    </wire>
    <wire loc="63:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc14b70"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc1a9d0"/></to>
    </wire>
    <wire loc="48:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SerialIdPin" scoped="" ref="0x7fdd2cc02620"/></from>
      <to><interface-ref name="PortA4" scoped="" ref="0x7fdd2cbf8cb0"/></to>
    </wire>
    <wire loc="141:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x7fdd2cbf8cb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb6bda0"/></to>
    </wire>
    <wire loc="49:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <from><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc08820"/></from>
      <to><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc14b70"/></to>
    </wire>
    <wire loc="191:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x7fdd2cbc1cb0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2cad1160"/></to>
    </wire>
    <wire loc="165:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x7fdd2cbdd350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb402b0"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb402b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c688e20"/></to>
    </wire>
    <wire loc="176:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x7fdd2cbd0350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb2e8f0"/></to>
    </wire>
    <wire loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb2e8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6163f0"/></to>
    </wire>
    <wire loc="185:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x7fdd2cbc7cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb1fc10"/></to>
    </wire>
    <wire loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb1fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5ab3f0"/></to>
    </wire>
    <wire loc="196:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x7fdd2cbb9060"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2cab76d0"/></to>
    </wire>
    <wire loc="143:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x7fdd2cbf5350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb682b0"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb682b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7b83f0"/></to>
    </wire>
    <wire loc="183:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x7fdd2cbc9670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb218f0"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb218f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5b2e20"/></to>
    </wire>
    <wire loc="146:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x7fdd2cbf2990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb60a20"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb60a20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c761a60"/></to>
    </wire>
    <wire loc="157:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x7fdd2cbe6990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb4e020"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb4e020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6ef0a0"/></to>
    </wire>
    <wire loc="168:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x7fdd2cbdacb0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb3d760"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb3d760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c67e6d0"/></to>
    </wire>
    <wire loc="179:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x7fdd2cbcdcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb2bda0"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb2bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c60de20"/></to>
    </wire>
    <wire loc="138:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x7fdd2cbfb350"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb6f8f0"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb6f8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7c93f0"/></to>
    </wire>
    <wire loc="149:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x7fdd2cbee350"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb5c020"/></to>
    </wire>
    <wire loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb5c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7573f0"/></to>
    </wire>
    <wire loc="160:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x7fdd2cbe2350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb4b5d0"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb4b5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6e69b0"/></to>
    </wire>
    <wire loc="171:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x7fdd2cbd5670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb39c10"/></to>
    </wire>
    <wire loc="73:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb39c10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6740a0"/></to>
    </wire>
    <wire loc="188:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x7fdd2cbc3670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb1b2b0"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb1b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5a2e20"/></to>
    </wire>
    <wire loc="194:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x7fdd2cbbdb20"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2cac1160"/></to>
    </wire>
    <wire loc="174:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x7fdd2cbd3cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb315d0"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb315d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c61de20"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb6bda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7c0e20"/></to>
    </wire>
    <wire loc="152:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x7fdd2cbebcb0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb595d0"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb595d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c74ee20"/></to>
    </wire>
    <wire loc="192:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x7fdd2cbbf4e0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2cacdc90"/></to>
    </wire>
    <wire loc="155:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x7fdd2cbe8350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb51d30"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb51d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6f6c90"/></to>
    </wire>
    <wire loc="166:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x7fdd2cbdc670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb3f440"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb3f440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6840a0"/></to>
    </wire>
    <wire loc="177:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x7fdd2cbcf670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb2da80"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb2da80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6136d0"/></to>
    </wire>
    <wire loc="186:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x7fdd2cbc5020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb1eda0"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb1eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5a86d0"/></to>
    </wire>
    <wire loc="144:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x7fdd2cbf3670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb67440"/></to>
    </wire>
    <wire loc="73:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb67440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7b56d0"/></to>
    </wire>
    <wire loc="147:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x7fdd2cbf1cb0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb5fc10"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb5fc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c75ee20"/></to>
    </wire>
    <wire loc="158:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x7fdd2cbe5cb0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb4d2b0"/></to>
    </wire>
    <wire loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb4d2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6ec3f0"/></to>
    </wire>
    <wire loc="169:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x7fdd2cbd7020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb3b8f0"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb3b8f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c67b9b0"/></to>
    </wire>
    <wire loc="180:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x7fdd2cbcb020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb29020"/></to>
    </wire>
    <wire loc="73:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb29020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6090a0"/></to>
    </wire>
    <wire loc="139:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x7fdd2cbfa670"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb6ea80"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb6ea80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7c66d0"/></to>
    </wire>
    <wire loc="150:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x7fdd2cbed670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb5b2b0"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb5b2b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7546d0"/></to>
    </wire>
    <wire loc="161:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x7fdd2cbe1670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb4a760"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb4a760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6e3e20"/></to>
    </wire>
    <wire loc="189:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x7fdd2cbc2990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb1a440"/></to>
    </wire>
    <wire loc="73:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb1a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c59e0a0"/></to>
    </wire>
    <wire loc="164:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x7fdd2cbdfcb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb41020"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb41020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c68bc90"/></to>
    </wire>
    <wire loc="175:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x7fdd2cbd1020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb2f760"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb2f760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6190a0"/></to>
    </wire>
    <wire loc="184:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x7fdd2cbc8990"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb20a80"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb20a80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5ae0a0"/></to>
    </wire>
    <wire loc="195:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x7fdd2cbbce40"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2cabdc90"/></to>
    </wire>
    <wire loc="142:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x7fdd2cbf6020"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb69020"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb69020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7bc0a0"/></to>
    </wire>
    <wire loc="153:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x7fdd2cbe9020"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb58760"/></to>
    </wire>
    <wire loc="73:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb58760"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7490a0"/></to>
    </wire>
    <wire loc="182:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x7fdd2cbca350"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb227a0"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb227a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5b5c90"/></to>
    </wire>
    <wire loc="156:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x7fdd2cbe7670"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb50e60"/></to>
    </wire>
    <wire loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb50e60"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6f3e20"/></to>
    </wire>
    <wire loc="167:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x7fdd2cbdb990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb3e5d0"/></to>
    </wire>
    <wire loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb3e5d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6813f0"/></to>
    </wire>
    <wire loc="178:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x7fdd2cbce990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb2cc10"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb2cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6109b0"/></to>
    </wire>
    <wire loc="187:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x7fdd2cbc4350"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb1c020"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb1c020"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c5a59b0"/></to>
    </wire>
    <wire loc="137:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x7fdd2cbfc020"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb706b0"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb706b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7cc020"/></to>
    </wire>
    <wire loc="148:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x7fdd2cbef020"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb5eda0"/></to>
    </wire>
    <wire loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb5eda0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c75a0a0"/></to>
    </wire>
    <wire loc="159:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x7fdd2cbe3020"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb4c440"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb4c440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6e96d0"/></to>
    </wire>
    <wire loc="170:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x7fdd2cbd6350"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb3aa80"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb3aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c678e20"/></to>
    </wire>
    <wire loc="193:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x7fdd2cbbe800"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2cac76d0"/></to>
    </wire>
    <wire loc="173:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x7fdd2cbd4990"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb323f0"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb323f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c620c90"/></to>
    </wire>
    <wire loc="162:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x7fdd2cbe0990"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb498f0"/></to>
    </wire>
    <wire loc="73:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb498f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c6de0a0"/></to>
    </wire>
    <wire loc="140:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x7fdd2cbf9990"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb6cc10"/></to>
    </wire>
    <wire loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb6cc10"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7c39b0"/></to>
    </wire>
    <wire loc="151:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x7fdd2cbec990"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb5a440"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb5a440"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x7fdd2c7519b0"/></to>
    </wire>
    <wire loc="54:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x7fdd2cd88390"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdd2cc61850"/></to>
    </wire>
    <wire loc="55:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x7fdd2cc60de0"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x7fdd2cd27a30"/></to>
    </wire>
    <wire loc="92:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdd2cc40690"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdd2c919a70"/></to>
    </wire>
    <wire loc="53:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdd2c9f1920"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2ca18c40"/></to>
    </wire>
    <wire loc="54:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fdd2ca14a00"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x7fdd2c9f4020"/></to>
    </wire>
    <wire loc="56:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x7fdd2c9f4020"/></from>
      <to><interface-ref name="PortA2" scoped="" ref="0x7fdd2cbfa670"/></to>
    </wire>
    <wire loc="55:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fdd2ca13ca0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x7fdd2c9f3380"/></to>
    </wire>
    <wire loc="57:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x7fdd2c9f3380"/></from>
      <to><interface-ref name="PortA1" scoped="" ref="0x7fdd2cbfb350"/></to>
    </wire>
    <wire loc="56:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fdd2ca11020"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x7fdd2c9f26a0"/></to>
    </wire>
    <wire loc="58:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x7fdd2c9f26a0"/></from>
      <to><interface-ref name="PortA0" scoped="" ref="0x7fdd2cbfc020"/></to>
    </wire>
    <wire loc="54:/home/aj/w/tinyos-main/tos/system/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9e1aa0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9d75a0"/></to>
    </wire>
    <wire loc="61:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9d75a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c83c150"/></to>
    </wire>
    <wire loc="59:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdd2c9da7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2c9cd7a0"/></to>
    </wire>
    <wire loc="65:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x7fdd2c9d0020"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x7fdd2c82e790"/></to>
    </wire>
    <wire loc="35:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdd2c9cd7a0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2c8ba080"/></to>
    </wire>
    <wire loc="62:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x7fdd2c837640"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c88bcf0"/></to>
    </wire>
    <wire loc="63:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdd2c8851d0"/></from>
      <to><interface-ref name="AlarmMilli32" scoped="" ref="0x7fdd2c9c9440"/></to>
    </wire>
    <wire loc="36:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="AlarmMilli32" scoped="" ref="0x7fdd2c9c9440"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdd2c8ba890"/></to>
    </wire>
    <wire loc="66:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdd2c82da60"/></from>
      <to><interface-ref name="CounterMilli32" scoped="" ref="0x7fdd2c9bab40"/></to>
    </wire>
    <wire loc="37:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <from><interface-ref name="CounterMilli32" scoped="" ref="0x7fdd2c9bab40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdd2c8b7bc0"/></to>
    </wire>
    <wire loc="72:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x7fdd2c8b7bc0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x7fdd2c4ba650"/></to>
    </wire>
    <wire loc="70:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x7fdd2c8ba080"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x7fdd2c4bf910"/></to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x7fdd2c8ba890"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x7fdd2c4be140"/></to>
    </wire>
    <wire loc="74:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdd2c4b8a90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c935c70"/></to>
    </wire>
    <wire loc="94:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x7fdd2c935c70"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x7fdd2c923020"/></to>
    </wire>
    <wire loc="75:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c4b3c90"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c92d020"/></to>
    </wire>
    <wire loc="95:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c92d020"/></from>
      <to><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c91e2b0"/></to>
    </wire>
    <wire loc="76:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fdd2c4b1020"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdd2c92c520"/></to>
    </wire>
    <wire loc="96:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x7fdd2c92c520"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x7fdd2c91d6b0"/></to>
    </wire>
    <wire loc="77:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c4ad2c0"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c928a40"/></to>
    </wire>
    <wire loc="97:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <from><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c928a40"/></from>
      <to><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c918230"/></to>
    </wire>
    <wire loc="74:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x7fdd2c882490"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdd2cd88390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x7fdd2c831a00"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x7fdd2cd88390"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <documentation loc="1:/home/aj/w/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="44:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <documentation loc="1:/home/aj/w/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformP" loc="42:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformP.nc" safe="">
      <documentation loc="1:/home/aj/w/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="MotePlatformC" loc="38:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <documentation loc="33:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
        <short>&#10; The porttion of a mica-family initialisation that is mote-specific.</short>
        <long>&#10; The porttion of a mica-family initialisation that is mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MotePlatformP" loc="41:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformP.nc" safe="">
      <documentation loc="35:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
        <short>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.</short>
        <long>&#10; The micaZ portion of a mica-family initialisation that is&#10; mote-specific.&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MeasureClockC" loc="56:/home/aj/w/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <documentation loc="47:/home/aj/w/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/home/aj/w/tinyos-main/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/home/aj/w/tinyos-main/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/home/aj/w/tinyos-main/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/McuSleepC.nc" safe="">
      <documentation loc="67:/home/aj/w/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
        <short>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128.</short>
        <long>&#10; Implementation of TEP 112 (Microcontroller Power Management) for&#10; the Atmega128. Power state calculation code copied from Rob&#10; Szewczyk's 1.x code in HPLPowerManagementM.nc.&#10;&#10; &#60;pre>&#10;  $Id: McuSleepC.nc,v 1.6 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @date   October 30, 2007&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkC" loc="3:BlinkC.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="45:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
        <short>&#10;&#10; The basic TinyOS LEDs abstraction.</short>
        <long>&#10;&#10; The basic TinyOS LEDs abstraction.&#10;&#10; @author Phil Buonadonna&#10; @author David Gay&#10; @author Philip Levis&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/home/aj/w/tinyos-main/tos/system/LedsP.nc" safe="">
      <documentation loc="35:/home/aj/w/tinyos-main/tos/system/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformLedsC" loc="42:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <documentation loc="1:/home/aj/w/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="48:/home/aj/w/tinyos-main/tos/system/TimerMilliP.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/system/TimerMilliP.nc">
        <short>&#10; Components should never wire to this component.</short>
        <long>&#10; Components should never wire to this component. This is the&#10; underlying configuration of virtualized millisecond timers. &#10; It auto-wires wires the timer&#10; implementation (TimerC) to the boot sequence and exports the&#10; various Timer interfaces.&#10;&#10; @author Philip Levis&#10; @author Cory Sharp&#10; @date   May 16 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HilTimerMilliC" loc="44:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
        <short>&#10; Millisecond timer for the mica family (see TEP102).</short>
        <long>&#10; Millisecond timer for the mica family (see TEP102). The &#34;millisecond&#34;&#10; timer system is built on hardware timer 0, running at 1024Hz.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP" loc="25:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <documentation loc="11:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
        <short>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.</short>
        <long>&#10; Configure hardware timer 0 for use as the mica family's millisecond&#10; timer.  This component does not follow the TEP102 HAL guidelines as&#10; there is only one compare register for timer 0, which is used to&#10; implement HilTimerMilliC. Hence it isn't useful to expose an&#10; AlarmMilliC or CounterMillIC component.&#10; &#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC):/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <documentation loc="45:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128AlarmAsyncC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP" loc="58(AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP):/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <documentation loc="45:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm1281AlarmAsyncP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fdd2c9b8bb0"/></type-var>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm1281Timer2AsyncC" loc="77:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <documentation loc="66:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
        <short>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..</short>
        <long>&#10; Simple wrapper around the actual timer implementation that automatically&#10; wires it to McuSleepC for low-power calculations..&#10;&#10; @author Philip Levis&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm1281Timer2AsyncP" loc="78:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc" safe="">
      <documentation loc="65:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
        <short>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode.</short>
        <long>&#10; HPL interface to Atmega1281 timer 2 in ASYNC mode. This is a specialised&#10; HPL component that assumes that timer 2 is used in ASYNC mode and&#10; includes some workarounds for some of the weirdnesses (delayed overflow&#10; interrupt) of that mode.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HilTimerMilliC.AlarmToTimerC" loc="46(HilTimerMilliC.AlarmToTimerC):/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.VirtualizeTimerC" loc="46(HilTimerMilliC.VirtualizeTimerC):/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HilTimerMilliC.CounterToLocalTimeC" loc="46(HilTimerMilliC.CounterToLocalTimeC):/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <documentation loc="33:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fdd2cbb65a0" loc="40:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fdd2cbb6910" loc="40:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fdd2cbb6c80" loc="40:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fdd2cba89f0" loc="41:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fdd2cba8d80" loc="42:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fdd2cba5170" loc="43:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fdd2cba54c0" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x7fdd2cb110d0" loc="42:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x7fdd2cb11460" loc="43:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x7fdd2cb117f0" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x7fdd2cb11b40" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128AlarmAsyncC" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc" abstract="">
      <documentation loc="45:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10; &#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fdd2c9b8bb0" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fdd2c9b8bb0"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fdd2c9b5020" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
          <component-ref qname="Atm128AlarmAsyncC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm1281AlarmAsyncP" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc" abstract="" safe="">
      <documentation loc="45:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
        <short>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode.</short>
        <long>&#10; Build a 32-bit alarm and counter from the atmega1281's 8-bit timer 2&#10; in asynchronous mode. Attempting to use the generic Atm128AlarmC&#10; component and the generic timer components runs into problems&#10; apparently related to letting timer 2 overflow.&#10;&#10; So, instead, this version (inspired by the 1.x code and a remark from&#10; Martin Turon) directly builds a 32-bit alarm and counter on top of timer 2&#10; and never lets timer 2 overflow.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision" ref="0x7fdd2c9ac900" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision" scoped="" ref="0x7fdd2c9ac900"/></type-var>
        </typedef>
        <constant name="divider" ref="0x7fdd2c9acc10" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
          <component-ref qname="Atm1281AlarmAsyncP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2c8b0430" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2c8b0430"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2c87f880" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2c87f880"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x7fdd2c87fbb0" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2c82fde0" loc="46:/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2c82fde0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x7fdd2cc21160" loc="58:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fdd2cc21160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc214e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fdd2cc23bd0" loc="57:/home/aj/w/tinyos-main/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fdd2cc23bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fdd2cc22020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fdd2cc1a9d0" loc="52:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc1a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc1ad50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2cc1ea70" loc="46:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2cc1ea70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc1edf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fdd2cc15c30" loc="50:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fdd2cc15c30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fdd2cc1a020"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fdd2cc1a1b0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fdd2cc1a340"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fdd2cc1a4d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fdd2cc1a660"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MoteInit" ref="0x7fdd2cc12400" loc="45:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MoteInit" scoped="" ref="0x7fdd2cc12400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc12780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2cc19cf0" loc="44:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2cc19cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc120a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x7fdd2cc12b00" loc="46:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x7fdd2cc12b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc12e80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fdd2cc14b70" loc="41:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc14b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc0c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fdd2cc144a0" loc="40:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformC.nc">
      <component-ref qname="MotePlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2cc144a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc14820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubInit" ref="0x7fdd2cc08820" loc="45:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubInit" scoped="" ref="0x7fdd2cc08820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc08ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialIdPin" ref="0x7fdd2cc02620" loc="44:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialIdPin" scoped="" ref="0x7fdd2cc02620"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cc029a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cc02b30"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cc02cc0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cc02e50"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cc08020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cc081b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cc08340"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cc084d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x7fdd2cc090e0" loc="43:/home/aj/w/tinyos-main/tos/platforms/micaz/MotePlatformP.nc">
      <component-ref qname="MotePlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2cc090e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc09460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x7fdd2cbc1cb0" loc="98:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x7fdd2cbc1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc0610"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc07a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc0930"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc0ac0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc0c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc0de0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbbf020"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbbf1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x7fdd2cbdd350" loc="72:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x7fdd2cbdd350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbdd6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbdd860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbdd9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbddb80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbddd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbdc020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbdc1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbdc340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x7fdd2cbd0350" loc="83:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x7fdd2cbd0350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd06d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd0860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd09f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd0b80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd0d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbcf020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbcf1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbcf340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x7fdd2cbc7cb0" loc="92:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x7fdd2cbc7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc60a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc6230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc63c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc6550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc66e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc6870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc6a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc6b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x7fdd2cbb9060" loc="103:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x7fdd2cbb9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbb93e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbb9570"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbb9700"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbb9890"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbb9a20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbb9bb0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbb9d40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbb8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x7fdd2cbf5350" loc="50:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x7fdd2cbf5350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf56d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf5860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf59f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf5b80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf5d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf3020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x7fdd2cbc9670" loc="90:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x7fdd2cbc9670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc99f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc9b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc9d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc8020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc8340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x7fdd2cbf2990" loc="53:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x7fdd2cbf2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf1340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf1660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x7fdd2cbe6990" loc="64:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x7fdd2cbe6990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe6d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe5340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe5660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x7fdd2cbdacb0" loc="75:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x7fdd2cbdacb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd90a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd9230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd93c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd9550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd96e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd9870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd9a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x7fdd2cbcdcb0" loc="86:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x7fdd2cbcdcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbcc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbcc230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbcc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbcc550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbcc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbcc870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbcca00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x7fdd2cbfb350" loc="45:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x7fdd2cbfb350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbfb6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbfb860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbfb9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbfbb80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbfbd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbfa020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbfa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbfa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x7fdd2cbee350" loc="56:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x7fdd2cbee350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbee6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbee860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbee9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbeeb80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbeed10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbed020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbed1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbed340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x7fdd2cbe2350" loc="67:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x7fdd2cbe2350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe26d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe2860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe29f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe2b80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe2d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe1020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe11b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe1340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x7fdd2cbd5670" loc="78:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x7fdd2cbd5670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd59f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd5b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd5d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd4020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd4340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x7fdd2cbc3670" loc="95:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x7fdd2cbc3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc2020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc2340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc24d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x7fdd2cbbdb20" loc="101:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x7fdd2cbbdb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbbc020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbbc1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbbc340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbbc4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbbc660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbbc7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbbc980"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbbcb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x7fdd2cbd3cb0" loc="81:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x7fdd2cbd3cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd20a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd2230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd23c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd2550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd26e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd2870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd2a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x7fdd2cbf8cb0" loc="48:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x7fdd2cbf8cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf70a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf7230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf73c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf7550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf76e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf7870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf7a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf7b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x7fdd2cbebcb0" loc="59:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x7fdd2cbebcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbea0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbea230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbea3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbea550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbea6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbea870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbeaa00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbeab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x7fdd2cbbf4e0" loc="99:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x7fdd2cbbf4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbbf860"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbbf9f0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbbfb80"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbbfd10"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbbe020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbbe1b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbbe340"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbbe4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x7fdd2cbe8350" loc="62:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x7fdd2cbe8350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe86d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe8860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe89f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe8b80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe8d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe7020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x7fdd2cbdc670" loc="73:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x7fdd2cbdc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbdc9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbdcb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbdcd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbdb020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbdb1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbdb340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbdb4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbdb660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x7fdd2cbcf670" loc="84:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x7fdd2cbcf670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbcf9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbcfb80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbcfd10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbce020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbce1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbce340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbce4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbce660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x7fdd2cbc5020" loc="93:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x7fdd2cbc5020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc53a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc5530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc56c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc5850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc59e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc5b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc5d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x7fdd2cbf3670" loc="51:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x7fdd2cbf3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf39f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf3b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf3d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf2020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf21b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf2340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf24d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf2660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x7fdd2cbf1cb0" loc="54:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x7fdd2cbf1cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf00a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf0230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf03c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf0550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf06e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf0870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf0a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf0b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x7fdd2cbe5cb0" loc="65:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x7fdd2cbe5cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe4550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe4870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe4a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x7fdd2cbd7020" loc="76:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x7fdd2cbd7020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd73a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd7530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd76c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd7850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd79e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd7b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd7d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd6020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x7fdd2cbcb020" loc="87:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x7fdd2cbcb020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbcb3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbcb530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbcb6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbcb850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbcb9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbcbb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbcbd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbca020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x7fdd2cbfa670" loc="46:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x7fdd2cbfa670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbfa9f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbfab80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbfad10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf9020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf91b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf9340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf94d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf9660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x7fdd2cbed670" loc="57:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x7fdd2cbed670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbedaf0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbedc80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbede10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbec020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbec1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbec340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbec4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbec660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x7fdd2cbe1670" loc="68:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x7fdd2cbe1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe19f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe1b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe1d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe0020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe01b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe0340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe04d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x7fdd2cbc2990" loc="96:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x7fdd2cbc2990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc2d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc1020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc11b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc1340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc14d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc1660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc17f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc1980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x7fdd2cbdfcb0" loc="71:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x7fdd2cbdfcb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbde410"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbde5a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbde730"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbde8c0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbdea50"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbdebe0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbded70"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbdd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x7fdd2cbd1020" loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x7fdd2cbd1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd13a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd1530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd16c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd1850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd19e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd1b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd1d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x7fdd2cbc8990" loc="91:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x7fdd2cbc8990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc8d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc7020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc71b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc7340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc74d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc7660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc77f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc7980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x7fdd2cbbce40" loc="102:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x7fdd2cbbce40"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbba1e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbba370"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbba500"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbba690"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbba820"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbba9b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbbab40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbbacd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x7fdd2cbf6020" loc="49:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x7fdd2cbf6020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf63a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf6530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf66c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf6850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf69e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf6b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf6d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf5020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x7fdd2cbe9020" loc="60:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x7fdd2cbe9020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe93a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe9530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe96c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe9850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe99e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe9b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe9d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe8020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x7fdd2cbca350" loc="89:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x7fdd2cbca350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbca6d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbca860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbca9f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbcab80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbcad10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc9020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc91b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc9340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x7fdd2cbe7670" loc="63:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x7fdd2cbe7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe79f0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe7b80"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe7d10"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe6020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe6340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x7fdd2cbdb990" loc="74:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x7fdd2cbdb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbdbd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbda020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbda1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbda340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbda4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbda660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbda7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbda980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x7fdd2cbce990" loc="85:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x7fdd2cbce990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbced10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbcd020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbcd1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbcd340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbcd4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbcd660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbcd7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbcd980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x7fdd2cbc4350" loc="94:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x7fdd2cbc4350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbc46d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbc4860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbc49f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbc4b80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbc4d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbc3020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbc31b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbc3340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x7fdd2cbfc020" loc="44:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x7fdd2cbfc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbfc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbfc530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbfc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbfc850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbfc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbfcb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbfcd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbfb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x7fdd2cbef020" loc="55:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x7fdd2cbef020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbef3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbef530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbef6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbef850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbef9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbefb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbefd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x7fdd2cbe3020" loc="66:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x7fdd2cbe3020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe33a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbe3530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbe36c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbe3850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbe39e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbe3b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbe3d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbe2020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x7fdd2cbd6350" loc="77:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x7fdd2cbd6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd66d0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd6860"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd69f0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd6b80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd6d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd5020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd51b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd5340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x7fdd2cbbe800" loc="100:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x7fdd2cbbe800"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbbeb80"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbbed10"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbbd020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbbd1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbbd340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbbd4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbbd660"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbbd7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x7fdd2cbd4990" loc="80:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x7fdd2cbd4990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbd4d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbd3020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbd31b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbd3340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbd34d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbd3660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbd37f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbd3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x7fdd2cbe0990" loc="69:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x7fdd2cbe0990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbe0d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbdf020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbdf1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbdf340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbdf4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbdf660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbdf7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbdf980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x7fdd2cbf9990" loc="47:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x7fdd2cbf9990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbf9d10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbf8020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbf81b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbf8340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbf84d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbf8660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbf87f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbf8980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x7fdd2cbec990" loc="58:/home/aj/w/tinyos-main/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x7fdd2cbec990"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cbecd10"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cbeb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cbeb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cbeb340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cbeb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cbeb660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cbeb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cbeb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fdd2cb6ea80" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb6ea80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb6ee00"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb6c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb6c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb6c340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb6c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb6c660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb6c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb6c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fdd2cb69020" loc="49:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb69020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb693a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb69530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb696c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb69850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb699e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb69b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb69d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb68020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fdd2cb706b0" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb706b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb70a30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb70bc0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb70d50"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb6f020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb6f1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb6f340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb6f4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb6f660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fdd2cb6cc10" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb6cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb6b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb6b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb6b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb6b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb6b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb6b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb6b980"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb6bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fdd2cb682b0" loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb682b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb68630"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb687c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb68950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb68ae0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb68c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb68e00"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb67020"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb671b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fdd2cb6f8f0" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb6f8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb6fc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb6fe00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb6e020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb6e1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb6e340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb6e4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb6e660"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb6e7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fdd2cb6bda0" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb6bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb6a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb6a310"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb6a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb6a630"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb6a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb6a950"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb6aae0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb6ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fdd2cb67440" loc="51:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb67440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb677c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb67950"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb67ae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb67c70"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb67e00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb66020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb661b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb66340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7cc020" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7cc020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7cc3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7cc530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7cc6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7cc850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7cc9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7ccb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7ccd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7cb020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7c93f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7c93f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7c9770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7c9900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7c9a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7c9c20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7c9db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7c8020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7c81b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7c8340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7c66d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7c66d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7c6a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7c6be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7c6d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7c5020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7c51b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7c5340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7c54d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7c5660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7c39b0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7c39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7c3d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7c2020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7c21b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7c2340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7c24d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7c2660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7c27f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7c2980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7c0e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7c0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7bf1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7bf350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7bf4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7bf670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7bf800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7bf990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7bfb20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7bfcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7bc0a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7bc0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7bc420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7bc5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7bc740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7bc8d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7bca60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7bcbf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7bcd80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7ba020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7b83f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7b83f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7b8770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7b8900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7b8a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7b8c20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7b8db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7b7020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7b71b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7b7340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7b56d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7b56d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c7b5a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7b5be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7b5d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7b4020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7b41b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c7b4340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7b44d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c7b4660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fdd2cb5eda0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb5eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb5d180"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb5d310"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb5d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb5d630"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb5d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb5d950"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb5dae0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb5dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fdd2cb5a440" loc="49:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb5a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb5a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb5a950"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb5aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb5ac70"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb5ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb59020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb591b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb59340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fdd2cb60a20" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb60a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb60da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb5f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb5f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb5f340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb5f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb5f660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb5f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb5f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fdd2cb5c020" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb5c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb5c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb5c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb5c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb5c850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb5c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb5cb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb5cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb5b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fdd2cb595d0" loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb595d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb59950"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb59ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb59c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb59e00"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb58020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb581b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb58340"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb584d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fdd2cb5fc10" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb5fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb5e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb5e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb5e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb5e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb5e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb5e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb5e980"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb5eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fdd2cb5b2b0" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb5b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb5b630"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb5b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb5b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb5bae0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb5bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb5be00"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb5a020"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb5a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fdd2cb58760" loc="51:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb58760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb58ae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb58c70"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb58e00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb57020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb571b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb57340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb574d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb57660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c761a60" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c761a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c761de0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c760020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7601b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c760340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7604d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c760660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7607f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c760980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c75ee20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c75ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c75d1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c75d350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c75d4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c75d670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c75d800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c75d990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c75db20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c75dcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c75a0a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c75a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c75a420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c75a5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c75a740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c75a8d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c75aa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c75abf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c75ad80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c759020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7573f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7573f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c757770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c757900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c757a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c757c20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c757db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c756020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7561b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c756340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7546d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7546d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c754a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c754be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c754d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c753020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7531b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c753340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7534d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c753660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7519b0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7519b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c751d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c750020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c7501b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c750340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c7504d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c750660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c7507f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c750980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c74ee20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c74ee20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c74c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c74c350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c74c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c74c670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c74c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c74c990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c74cb20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c74ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c7490a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c7490a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c749420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c7495b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c749740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c7498d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c749a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c749bf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c749d80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c748020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fdd2cb4e020" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb4e020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb4e3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb4e530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb4e6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb4e850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb4e9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb4eb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb4ed00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb4d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fdd2cb4b5d0" loc="49:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb4b5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb4b950"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb4bae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb4bc70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb4be00"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb4a020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb4a1b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb4a340"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb4a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fdd2cb51d30" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb51d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb500e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb50270"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb50400"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb50590"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb50720"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb508b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb50a40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb50bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fdd2cb4d2b0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb4d2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb4d630"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb4d7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb4d950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb4dae0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb4dc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb4de00"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb4c020"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb4c1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fdd2cb4a760" loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb4a760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb4aae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb4ac70"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb4ae00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb49020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb491b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb49340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb494d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb49660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fdd2cb50e60" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb50e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb4f210"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb4f3a0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb4f530"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb4f6c0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb4f850"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb4f9e0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb4fb70"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb4fd00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fdd2cb4c440" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb4c440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb4c7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb4c950"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb4cae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb4cc70"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb4ce00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb4b020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb4b1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb4b340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fdd2cb498f0" loc="51:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb498f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb49c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb49e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb47020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb471b0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb47340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb474d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb47660"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb477f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6f6c90" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6f6c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6f50a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6f5230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6f53c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6f5550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6f56e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6f5870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6f5a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6f5b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6f3e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6f3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6f21c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6f2350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6f24e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6f2670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6f2800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6f2990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6f2b20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6f2cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6ef0a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6ef0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6ef420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6ef5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6ef740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6ef8d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6efa60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6efbf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6efd80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6ee020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6ec3f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6ec3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6ec770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6ec900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6eca90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6ecc20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6ecdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6eb020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6eb1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6eb340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6e96d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6e96d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6e9a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6e9be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6e9d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6e8020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6e81b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6e8340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6e84d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6e8660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6e69b0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6e69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6e6d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6e5020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6e51b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6e5340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6e54d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6e5660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6e57f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6e5980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6e3e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6e3e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6e11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6e1350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6e14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6e1670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6e1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6e1990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6e1b20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6e1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6de0a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6de0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6de420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6de5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6de740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6de8d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6dea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c6debf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6ded80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c6dd020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fdd2cb3f440" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb3f440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb3f7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb3f950"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb3fae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb3fc70"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb3fe00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb3e020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb3e1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb3e340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fdd2cb3b8f0" loc="49:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb3b8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb3bc70"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb3be00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb3a020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb3a1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb3a340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb3a4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb3a660"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb3a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fdd2cb41020" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb41020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb413a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb41530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb416c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb41850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb419e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb41b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb41d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb40020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fdd2cb3e5d0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb3e5d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb3e950"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb3eae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb3ec70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb3ee00"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb3d020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb3d1b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb3d340"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb3d4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fdd2cb3aa80" loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb3aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb3ae00"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb39020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb391b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb39340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb394d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb39660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb397f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb39980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fdd2cb402b0" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb40630"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb407c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb40950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb40ae0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb40c70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb40e00"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb3f020"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb3f1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fdd2cb3d760" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb3d760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb3dae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb3dc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb3de00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb3b020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb3b1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb3b340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb3b4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb3b660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fdd2cb39c10" loc="51:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb39c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb38020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb381b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb38340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb384d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb38660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb387f0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb38980"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb38b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c68bc90" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c68bc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c68a0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c68a230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c68a3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c68a550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c68a6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c68a870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c68aa00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c68ab90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c688e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c688e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6871c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c687350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6874e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c687670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c687800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c687990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c687b20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c687cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6840a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6840a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c684420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6845b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c684740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6848d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c684a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c684bf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c684d80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c683020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6813f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6813f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c681770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c681900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c681a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c681c20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c681db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c680020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6801b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c680340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c67e6d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c67e6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c67ea50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c67ebe0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c67ed70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c67d020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c67d1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c67d340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c67d4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c67d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c67b9b0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c67b9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c67bd30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c67a020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c67a1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c67a340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c67a4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c67a660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c67a7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c67a980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c678e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c678e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c6771c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c677350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c6774e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c677670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c677800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c677990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c677b20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c677cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6740a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c674420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6745b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c674740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6748d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c674a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c674bf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c674d80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c672020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fdd2cb2f760" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb2f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb2fae0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb2fc70"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb2fe00"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb2e020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb2e1b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb2e340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb2e4d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb2e660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fdd2cb2cc10" loc="49:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb2cc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb2b020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb2b1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb2b340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb2b4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb2b660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb2b7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb2b980"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb2bb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fdd2cb323f0" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb323f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb32770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb32900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb32a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb32c20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb32db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb31020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb311b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb31340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fdd2cb2e8f0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb2e8f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb2ec70"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb2ee00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb2d020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb2d1b0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb2d340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb2d4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb2d660"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb2d7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fdd2cb2bda0" loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb2bda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb2a180"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb2a310"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb2a4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb2a630"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb2a7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb2a950"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb2aae0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb2ac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fdd2cb315d0" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb315d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb31950"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb31ae0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb31c70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb31e00"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb2f020"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb2f1b0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb2f340"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb2f4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fdd2cb2da80" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb2da80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb2de00"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb2c020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb2c1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb2c340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb2c4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb2c660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb2c7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb2c980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fdd2cb29020" loc="51:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb29020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb293a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb29530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb296c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb29850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb299e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb29b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb29d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb28020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c620c90" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c620c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c61f0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c61f230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c61f3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c61f550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c61f6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c61f870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c61fa00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c61fb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c61de20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c61de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c61c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c61c350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c61c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c61c670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c61c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c61c990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c61cb20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c61ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6190a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6190a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c619420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6195b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c619740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6198d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c619a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c619bf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c619d80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c618020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6163f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6163f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c616770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c616900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c616a90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c616c20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c616db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c615020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6151b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c615340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6136d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6136d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c613a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c613be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c613d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c612020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c6121b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c612340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c6124d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c612660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6109b0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6109b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c610d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c60f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c60f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c60f340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c60f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c60f660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c60f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c60f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c60de20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c60de20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c60c1c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c60c350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c60c4e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c60c670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c60c800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c60c990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c60cb20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c60ccb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c6090a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c6090a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c609420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c6095b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c609740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c6098d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c609a60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c609bf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c609d80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c607020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x7fdd2cb20a80" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x7fdd2cb20a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb20e00"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb1f020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb1f1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb1f340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb1f4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb1f660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb1f7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb1f980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x7fdd2cb1c020" loc="49:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x7fdd2cb1c020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb1c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb1c530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb1c6c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb1c850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb1c9e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb1cb70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb1cd00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb1b020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x7fdd2cb227a0" loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x7fdd2cb227a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb22b20"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb22cb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb22e40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb21020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb211b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb21340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb214d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb21660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x7fdd2cb1fc10" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x7fdd2cb1fc10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb1e020"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb1e1b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb1e340"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb1e4d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb1e660"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb1e7f0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb1e980"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb1eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x7fdd2cb1b2b0" loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x7fdd2cb1b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb1b630"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb1b7c0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb1b950"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb1bae0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb1bc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb1be00"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb1a020"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb1a1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x7fdd2cb218f0" loc="45:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x7fdd2cb218f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb21c70"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb21e00"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb20020"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb201b0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb20340"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb204d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb20660"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb207f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x7fdd2cb1eda0" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x7fdd2cb1eda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb1d180"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb1d310"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb1d4a0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb1d630"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb1d7c0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb1d950"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb1dae0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb1dc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x7fdd2cb1a440" loc="51:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x7fdd2cb1a440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb1a7c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cb1a950"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cb1aae0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cb1ac70"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cb1ae00"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cb19020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cb191b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cb19340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5b5c90" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5b5c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5b40a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5b4230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5b43c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5b4550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5b46e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5b4870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5b4a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5b4b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5b2e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5b2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5b11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5b1350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5b14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5b1670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5b1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5b1990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5b1b20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5b1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5ae0a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5ae0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5ae420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5ae5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5ae740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5ae8d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5aea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5aebf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5aed80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5ad020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5ab3f0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5ab3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5ab770"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5ab900"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5aba90"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5abc20"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5abdb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5aa020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5aa1b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5aa340"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5a86d0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5a86d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5a8a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5a8be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5a8d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5a7020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5a71b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5a7340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5a74d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5a59b0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5a59b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5a5d30"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5a4020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5a41b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5a4340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5a44d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5a4660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5a47f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5a4980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c5a2e20" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c5a2e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c5a11c0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c5a1350"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c5a14e0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c5a1670"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c5a1800"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c5a1990"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c5a1b20"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c5a1cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2c59e0a0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2c59e0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c59e420"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c59e5b0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c59e740"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c59e8d0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c59ea60"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c59ebf0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c59ed80"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c59d020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cb12a20" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cb12a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cb12da0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cafb020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cafb1b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cafb340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cafb4d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cafb660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cafb7f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cafb980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2caf76d0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2caf76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2caf7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2caf7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2caf7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2caf6020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2caf61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2caf6340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2caf64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2caf6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2caf1160" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2caf1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2caf14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2caf1670"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2caf1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2caf1990"/>
        <function-ref name="get" scoped="" ref="0x7fdd2caf1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2caf1cb0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2caf1e40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2caf0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2caedc90" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2caedc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2caeb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2caeb230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2caeb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2caeb550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2caeb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2caeb870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2caeba00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2caebb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cae76d0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cae76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cae7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cae7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cae7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cae6020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cae61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cae6340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cae64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cae6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cae1160" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cae1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cae14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cae1670"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cae1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cae1990"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cae1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cae1cb0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cae1e40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cae0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2caddc90" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2caddc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cadb0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cadb230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cadb3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cadb550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cadb6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cadb870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cadba00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cadbb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cad76d0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cad76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cad7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cad7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cad7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cad6020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cad61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cad6340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cad64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cad6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cad1160" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cad1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cad14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cad1670"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cad1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cad1990"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cad1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cad1cb0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cad1e40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cad0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cacdc90" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cacdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cacc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cacc230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cacc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cacc550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cacc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cacc870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cacca00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2caccb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cac76d0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cac76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cac7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cac7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cac7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cac6020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cac61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cac6340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cac64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cac6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cac1160" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cac1160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cac14e0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cac1670"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cac1800"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cac1990"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cac1b20"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cac1cb0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cac1e40"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cac0020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cabdc90" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cabdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cabc0a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cabc230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cabc3c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cabc550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cabc6e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cabc870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cabca00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cabcb90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x7fdd2cab76d0" loc="47:/home/aj/w/tinyos-main/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x7fdd2cab76d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2cab7a50"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2cab7be0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2cab7d70"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2cab6020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2cab61b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2cab6340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2cab64d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2cab6660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2ca78020" loc="61:/home/aj/w/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2ca78020"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x7fdd2cd593a0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x7fdd2cd593a0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2ca783a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x7fdd2ca78690" loc="62:/home/aj/w/tinyos-main/tos/platforms/iris/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x7fdd2ca78690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x7fdd2ca78a10"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x7fdd2ca78ba0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x7fdd2ca78d30"/>
        <function-ref name="actualMicro" scoped="" ref="0x7fdd2ca77020"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x7fdd2ca771b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x7fdd2ca57720" loc="60:/home/aj/w/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x7fdd2ca57720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2ca57aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x7fdd2cc1fdc0" loc="57:/home/aj/w/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fdd2cc1fdc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fdd2ca58180"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x7fdd2ca57020" loc="59:/home/aj/w/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x7fdd2ca57020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2ca573a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x7fdd2ca58470" loc="58:/home/aj/w/tinyos-main/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fdd2ca58470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2ca587f0"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fdd2ca58980"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fdd2ca58b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fdd2cd88390" loc="48:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fdd2cd88390"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdd2cd88710"/>
        <function-ref name="runTask" scoped="" ref="0x7fdd2cd888a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fdd2cd30510" loc="47:/home/aj/w/tinyos-main/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fdd2cd30510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cd30890"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fdd2cd30a20"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fdd2cd30bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x7fdd2cc61850" loc="56:/home/aj/w/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x7fdd2cc61850"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdd2cc61bd0"/>
        <function-ref name="runTask" scoped="" ref="0x7fdd2cc61d60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x7fdd2cc60de0" loc="57:/home/aj/w/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fdd2cc60de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fdd2cc5f180"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x7fdd2cc628a0" loc="55:/home/aj/w/tinyos-main/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x7fdd2cc628a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2cc62c20"/>
        <function-ref name="taskLoop" scoped="" ref="0x7fdd2cc62db0"/>
        <function-ref name="runNextTask" scoped="" ref="0x7fdd2cc61020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x7fdd2cc40690" loc="88:/home/aj/w/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdd2cc40690"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fdd2cc40a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x7fdd2cd27a30" loc="84:/home/aj/w/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x7fdd2cd27a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x7fdd2cd27db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x7fdd2cc43020" loc="85:/home/aj/w/tinyos-main/tos/chips/atm1281/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x7fdd2cc43020"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x7fdd2cc433a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x7fdd2ca3e8d0" loc="4:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x7fdd2ca3e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2ca3de80"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2ca474a0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2ca3d260"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2ca47da0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2ca3b7a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2ca3b320"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2ca47920"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2ca48560"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2ca3d870"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2ca48a30"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2ca47020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x7fdd2ca2f790" loc="8:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x7fdd2ca2f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x7fdd2ca2fb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x7fdd2ca3bdf0" loc="5:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x7fdd2ca3bdf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2ca36390"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2ca39970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2ca38720"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2ca382a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2ca36c90"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2ca36810"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2ca39df0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2ca3aa80"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2ca38d30"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2ca39020"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2ca394f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x7fdd2ca220d0" loc="7:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fdd2ca220d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdd2ca22450"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdd2ca225e0"/>
        <function-ref name="led1On" scoped="" ref="0x7fdd2ca22770"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdd2ca22900"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdd2ca22a90"/>
        <function-ref name="get" scoped="" ref="0x7fdd2ca22c20"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdd2ca22db0"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdd2ca2f4d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2ca2f020"/>
        <function-ref name="led0On" scoped="" ref="0x7fdd2ca2f1b0"/>
        <function-ref name="led2On" scoped="" ref="0x7fdd2ca2f340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x7fdd2ca35340" loc="6:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x7fdd2ca35340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2ca31870"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2ca34e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2ca33c00"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2ca33780"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2ca301e0"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2ca31cf0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2ca33300"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2ca34020"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2ca31260"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2ca344f0"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2ca349c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fdd2ca4a830" loc="46:/home/aj/w/tinyos-main/tos/system/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fdd2ca4a830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdd2ca4abb0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdd2ca4ad40"/>
        <function-ref name="led1On" scoped="" ref="0x7fdd2ca19020"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdd2ca191b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdd2ca19340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2ca194d0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdd2ca19660"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdd2ca19ca0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2ca197f0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdd2ca19980"/>
        <function-ref name="led2On" scoped="" ref="0x7fdd2ca19b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x7fdd2ca14a00" loc="50:/home/aj/w/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fdd2ca14a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2ca14d80"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2ca13020"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2ca131b0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2ca13340"/>
        <function-ref name="get" scoped="" ref="0x7fdd2ca134d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2ca13660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2ca137f0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2ca13980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2ca18c40" loc="46:/home/aj/w/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2ca18c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2ca15020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x7fdd2ca13ca0" loc="51:/home/aj/w/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fdd2ca13ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2ca120a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2ca12230"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2ca123c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2ca12550"/>
        <function-ref name="get" scoped="" ref="0x7fdd2ca126e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2ca12870"/>
        <function-ref name="set" scoped="" ref="0x7fdd2ca12a00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2ca12b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x7fdd2ca152a0" loc="47:/home/aj/w/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x7fdd2ca152a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x7fdd2ca15620"/>
        <function-ref name="led0Toggle" scoped="" ref="0x7fdd2ca157b0"/>
        <function-ref name="led1On" scoped="" ref="0x7fdd2ca15940"/>
        <function-ref name="led1Toggle" scoped="" ref="0x7fdd2ca15ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x7fdd2ca15c60"/>
        <function-ref name="get" scoped="" ref="0x7fdd2ca15df0"/>
        <function-ref name="led1Off" scoped="" ref="0x7fdd2ca14020"/>
        <function-ref name="led2Off" scoped="" ref="0x7fdd2ca14660"/>
        <function-ref name="set" scoped="" ref="0x7fdd2ca141b0"/>
        <function-ref name="led0On" scoped="" ref="0x7fdd2ca14340"/>
        <function-ref name="led2On" scoped="" ref="0x7fdd2ca144d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x7fdd2ca11020" loc="52:/home/aj/w/tinyos-main/tos/system/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fdd2ca11020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2ca113a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2ca11530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2ca116c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2ca11850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2ca119e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2ca11b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2ca11d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2ca10020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x7fdd2c9f4020" loc="44:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x7fdd2c9f4020"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c9f43a0"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c9f4530"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c9f46c0"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c9f4850"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c9f49e0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c9f4b70"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c9f4d00"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c9f3020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x7fdd2c9f3380" loc="45:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x7fdd2c9f3380"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c9f3700"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c9f3890"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c9f3a20"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c9f3bb0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c9f3d40"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c9f2020"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c9f21b0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c9f2340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x7fdd2c9f1920" loc="47:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2c9f1920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2c9f1ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x7fdd2c9f26a0" loc="46:/home/aj/w/tinyos-main/tos/platforms/mica/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x7fdd2c9f26a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x7fdd2c9f2a20"/>
        <function-ref name="isInput" scoped="" ref="0x7fdd2c9f2bb0"/>
        <function-ref name="toggle" scoped="" ref="0x7fdd2c9f2d40"/>
        <function-ref name="isOutput" scoped="" ref="0x7fdd2c9f1020"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c9f11b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x7fdd2c9f1340"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c9f14d0"/>
        <function-ref name="clr" scoped="" ref="0x7fdd2c9f1660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c81c140" loc="45:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c81c140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c818630"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c81bb70"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c819920"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c8194a0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c817020"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c818ab0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c819020"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c81cd30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c818020"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c81b220"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c81b6f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fdd2c9e1aa0" loc="49:/home/aj/w/tinyos-main/tos/system/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9e1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c9dc020"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c9de510"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c9dd300"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c9dee10"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c9dc920"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c9dc4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c9de990"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c9df6b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c9dd910"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c9dfb80"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c9de090"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x7fdd2c9d75a0" loc="46:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x7fdd2c9d75a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c9d3a80"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c9d4090"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c9d4e10"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c9d4990"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c9d24a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c9d2020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c9d4510"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c9d6200"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c9d3470"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c9d66d0"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c9d6ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fdd2c9d0020" loc="47:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fdd2c9d0020"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdd2c9d0c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2c9da7a0" loc="45:/home/aj/w/tinyos-main/tos/platforms/mica/HilTimerMilliC.nc">
      <component-ref qname="HilTimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2c9da7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2c9dab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CounterMilli32" ref="0x7fdd2c9bab40" loc="29:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterMilli32" scoped="" ref="0x7fdd2c9bab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdd2c9bf970"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdd2c9be340"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdd2c9bfe30"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c9be800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2c9cd7a0" loc="27:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2c9cd7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2c9cdb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AlarmMilli32" ref="0x7fdd2c9c9440" loc="28:/home/aj/w/tinyos-main/tos/platforms/mica/AlarmCounterMilliP.nc">
      <component-ref qname="AlarmCounterMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmMilli32" scoped="" ref="0x7fdd2c9c9440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c9c1db0"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c9c2da0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdd2c9c1760"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c9c12a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdd2c9c02a0"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c9c23d0"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c9c28e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdd2c8ba890" loc="61:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fdd2c8ba890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c8b70d0"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c8b80d0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdd2c8b8a50"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c8b8590"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdd2c8b7590"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c8b96e0"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c8b9bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2c8ba080" loc="60:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2c8ba080"/></type-interface>
      <attribute-value>
        <attribute-ref name="atleastonce" ref="0x7fdd2cd59020"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atleastonce" ref="0x7fdd2cd59020"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2c8ba400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fdd2c8b7bc0" loc="62:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm128AlarmAsyncC.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fdd2c8b7bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdd2c8b5a00"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdd2c8b44e0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdd2c8b4020"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c8b49a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerCtrl" ref="0x7fdd2c4b3c90" loc="66:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c4b3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fdd2c4b20a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fdd2c4b2230"/>
        <function-ref name="getControlA" scoped="" ref="0x7fdd2c4b23c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fdd2c4b2550"/>
        <function-ref name="setControlB" scoped="" ref="0x7fdd2c4b26e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fdd2c4b2870"/>
        <function-ref name="getControlB" scoped="" ref="0x7fdd2c4b2a00"/>
        <function-ref name="setControlA" scoped="" ref="0x7fdd2c4b2b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x7fdd2c4be140" loc="61:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fdd2c4be140"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c4bcb30"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c4bd9f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdd2c4bc4e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c4bc020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdd2c4ba020"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c4bd020"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c4bd530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x7fdd2c4bf910" loc="60:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x7fdd2c4bf910"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x7fdd2c4bfc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x7fdd2c4ba650" loc="62:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fdd2c4ba650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdd2c4b95b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdd2c4b8020"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdd2c4b9a70"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c4b84e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerAsync" ref="0x7fdd2c4ad2c0" loc="68:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c4ad2c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fdd2c4ad640"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fdd2c4ad7d0"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fdd2c4ad960"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fdd2c4adaf0"/>
        <function-ref name="countBusy" scoped="" ref="0x7fdd2c4adc80"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fdd2c4ade10"/>
        <function-ref name="getAssr" scoped="" ref="0x7fdd2c4ac020"/>
        <function-ref name="setAssr" scoped="" ref="0x7fdd2c4ac1b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Compare" ref="0x7fdd2c4b1020" loc="67:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fdd2c4b1020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fdd2c4ae9a0"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c4af660"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c4b1c50"/>
        <function-ref name="reset" scoped="" ref="0x7fdd2c4afb20"/>
        <function-ref name="isOn" scoped="" ref="0x7fdd2c4aee60"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c4af150"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c4ae020"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c4ae4e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x7fdd2c4b8a90" loc="65:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/Atm1281AlarmAsyncP.nc">
      <component-ref qname="AlarmCounterMilliP.Atm128AlarmAsyncC.Atm1281AlarmAsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c4b8a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fdd2c4b4e60"/>
        <function-ref name="test" scoped="" ref="0x7fdd2c4b44e0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c4b76f0"/>
        <function-ref name="setScale" scoped="" ref="0x7fdd2c4b3350"/>
        <function-ref name="getScale" scoped="" ref="0x7fdd2c4b3860"/>
        <function-ref name="reset" scoped="" ref="0x7fdd2c4b65d0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c4b6110"/>
        <function-ref name="isOn" scoped="" ref="0x7fdd2c4b49a0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c4b7bb0"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c4b6a90"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c4b4020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fdd2c92d020" loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c92d020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fdd2c92d3a0"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fdd2c92d530"/>
        <function-ref name="getControlA" scoped="" ref="0x7fdd2c92d6c0"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fdd2c92d850"/>
        <function-ref name="setControlB" scoped="" ref="0x7fdd2c92d9e0"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fdd2c92db70"/>
        <function-ref name="getControlB" scoped="" ref="0x7fdd2c92dd00"/>
        <function-ref name="setControlA" scoped="" ref="0x7fdd2c92c020"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fdd2c928a40" loc="84:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c928a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fdd2c928dc0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fdd2c927020"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fdd2c9271b0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fdd2c927340"/>
        <function-ref name="countBusy" scoped="" ref="0x7fdd2c9274d0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fdd2c927660"/>
        <function-ref name="getAssr" scoped="" ref="0x7fdd2c9277f0"/>
        <function-ref name="setAssr" scoped="" ref="0x7fdd2c927980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdd2c92c520" loc="83:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fdd2c92c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fdd2c928020"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c92bb80"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c92b1b0"/>
        <function-ref name="reset" scoped="" ref="0x7fdd2c929090"/>
        <function-ref name="isOn" scoped="" ref="0x7fdd2c9284e0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c92b670"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c929550"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c929a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c935c70" loc="81:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncC.nc">
      <component-ref qname="HplAtm1281Timer2AsyncC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c935c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fdd2c92e020"/>
        <function-ref name="test" scoped="" ref="0x7fdd2c92f610"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c9328e0"/>
        <function-ref name="setScale" scoped="" ref="0x7fdd2c92e4e0"/>
        <function-ref name="getScale" scoped="" ref="0x7fdd2c92e9f0"/>
        <function-ref name="reset" scoped="" ref="0x7fdd2c9317a0"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c9312e0"/>
        <function-ref name="isOn" scoped="" ref="0x7fdd2c92fad0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c932da0"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c931c60"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c92f150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerCtrl" ref="0x7fdd2c91e2b0" loc="83:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerCtrl" scoped="" ref="0x7fdd2c91e2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
      </instance>
      <interface-functions>
        <function-ref name="getInterruptFlag" scoped="" ref="0x7fdd2c91e630"/>
        <function-ref name="getInterruptMask" scoped="" ref="0x7fdd2c91e7c0"/>
        <function-ref name="getControlA" scoped="" ref="0x7fdd2c91e950"/>
        <function-ref name="setInterruptMask" scoped="" ref="0x7fdd2c91eae0"/>
        <function-ref name="setControlB" scoped="" ref="0x7fdd2c91ec70"/>
        <function-ref name="setInterruptFlag" scoped="" ref="0x7fdd2c91ee00"/>
        <function-ref name="getControlB" scoped="" ref="0x7fdd2c91d020"/>
        <function-ref name="setControlA" scoped="" ref="0x7fdd2c91d1b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x7fdd2c919a70" loc="85:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x7fdd2c919a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x7fdd2c919df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerAsync" ref="0x7fdd2c918230" loc="86:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerAsync" scoped="" ref="0x7fdd2c918230"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
      </instance>
      <interface-functions>
        <function-ref name="compareBBusy" scoped="" ref="0x7fdd2c9185b0"/>
        <function-ref name="setTimer2Asynchronous" scoped="" ref="0x7fdd2c918740"/>
        <function-ref name="controlABusy" scoped="" ref="0x7fdd2c9188d0"/>
        <function-ref name="controlBBusy" scoped="" ref="0x7fdd2c918a60"/>
        <function-ref name="countBusy" scoped="" ref="0x7fdd2c918bf0"/>
        <function-ref name="compareABusy" scoped="" ref="0x7fdd2c918d80"/>
        <function-ref name="getAssr" scoped="" ref="0x7fdd2c917020"/>
        <function-ref name="setAssr" scoped="" ref="0x7fdd2c9171b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x7fdd2c91d6b0" loc="84:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x7fdd2c91d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x7fdd2c919110"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c91bda0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c91b3d0"/>
        <function-ref name="reset" scoped="" ref="0x7fdd2c91a2a0"/>
        <function-ref name="isOn" scoped="" ref="0x7fdd2c9195d0"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c91b890"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c91a760"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c91ac20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c923020" loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm1281Timer2AsyncP.nc">
      <component-ref qname="HplAtm1281Timer2AsyncP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c923020"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="off" scoped="" ref="0x7fdd2c91f350"/>
        <function-ref name="test" scoped="" ref="0x7fdd2c9209a0"/>
        <function-ref name="get" scoped="" ref="0x7fdd2c923c50"/>
        <function-ref name="setScale" scoped="" ref="0x7fdd2c91f810"/>
        <function-ref name="getScale" scoped="" ref="0x7fdd2c91fd20"/>
        <function-ref name="reset" scoped="" ref="0x7fdd2c922b20"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c922660"/>
        <function-ref name="isOn" scoped="" ref="0x7fdd2c920e60"/>
        <function-ref name="set" scoped="" ref="0x7fdd2c922150"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c920020"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c9204e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x7fdd2c882490" loc="74:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x7fdd2c882490"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdd2c882810"/>
        <function-ref name="runTask" scoped="" ref="0x7fdd2c8829a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x7fdd2c8851d0" loc="49:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x7fdd2c8851d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c883b30"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c8849f0"/>
        <function-ref name="startAt" scoped="" ref="0x7fdd2c8834e0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c883020"/>
        <function-ref name="getAlarm" scoped="" ref="0x7fdd2c882020"/>
        <function-ref name="start" scoped="" ref="0x7fdd2c884020"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c884530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c88bcf0" loc="48:/home/aj/w/tinyos-main/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="HilTimerMilliC.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c88bcf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c887220"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c8897c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c888590"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c888110"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c887b20"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c8876a0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c889c40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c88a940"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c888ba0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c88ae10"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c889340"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x7fdd2c831a00" loc="71:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x7fdd2c831a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x7fdd2c831d80"/>
        <function-ref name="runTask" scoped="" ref="0x7fdd2c830020"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x7fdd2c837640" loc="49:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x7fdd2c837640"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c833c40"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c8341e0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c833020"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c834ae0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c831590"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c831110"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c834660"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c835390"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c833630"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c835860"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c835d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c83c150" loc="48:/home/aj/w/tinyos-main/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="HilTimerMilliC.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c83c150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c838700"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c83bc30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c83aa50"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c83a5b0"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c837090"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c838ba0"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c83a110"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c83cd60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c8380d0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c83b2a0"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c83b790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x7fdd2c82e790" loc="48:/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x7fdd2c82e790"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdd2c82d3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x7fdd2c82da60" loc="49:/home/aj/w/tinyos-main/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="HilTimerMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x7fdd2c82da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x7fdd2c823890"/>
        <function-ref name="clearOverflow" scoped="" ref="0x7fdd2c822260"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x7fdd2c823d50"/>
        <function-ref name="overflow" scoped="" ref="0x7fdd2c822720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c816b00" loc="45:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c816b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c811110"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c8135b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c8124a0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c812020"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c811a10"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c811590"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c813a30"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c815750"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c812ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c815c20"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c813130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x7fdd2c80f490" loc="45:/home/aj/w/tinyos-main/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x7fdd2c80f490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x7fdd2ccae9b0"/>
            <typename><typedef-ref name="TMilli" ref="0x7fdd2ccaed20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x7fdd2c80ba20"/>
        <function-ref name="fired" scoped="" ref="0x7fdd2c80c020"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x7fdd2c80cda0"/>
        <function-ref name="isOneShot" scoped="" ref="0x7fdd2c80c920"/>
        <function-ref name="getdt" scoped="" ref="0x7fdd2c80a4a0"/>
        <function-ref name="gett0" scoped="" ref="0x7fdd2c80a020"/>
        <function-ref name="isRunning" scoped="" ref="0x7fdd2c80c4a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x7fdd2c80e0d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x7fdd2c80b410"/>
        <function-ref name="startOneShot" scoped="" ref="0x7fdd2c80e5a0"/>
        <function-ref name="stop" scoped="" ref="0x7fdd2c80ea70"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/home/aj/w/tinyos-main/tos/interfaces/Init.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fdd2cc22c80" loc="62:/home/aj/w/tinyos-main/tos/interfaces/Init.nc">
        <documentation loc="53:/home/aj/w/tinyos-main/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdd2cd2cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/home/aj/w/tinyos-main/tos/interfaces/Boot.nc">
      <documentation loc="42:/home/aj/w/tinyos-main/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x7fdd2cc23800" loc="60:/home/aj/w/tinyos-main/tos/interfaces/Boot.nc">
        <documentation loc="51:/home/aj/w/tinyos-main/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x7fdd2cc15890" loc="60:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fdd2d388610"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x7fdd2cc15610" loc="60:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x7fdd2cc1be10" loc="31:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x7fdd2d388610"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x7fdd2cc188e0" loc="39:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fdd2cc18660" loc="39:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x7fdd2cc17440" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x7fdd2cc171c0" loc="46:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x7fdd2cc17d00" loc="53:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x7fdd2cc05ca0" loc="44:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x7fdd2cc03420" loc="45:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x7fdd2cc06e30" loc="42:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x7fdd2cc022b0" loc="47:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdd2cc05590" loc="43:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x7fdd2cc03b40" loc="46:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdd2cc06070" loc="40:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x7fdd2cc06740" loc="41:/home/aj/w/tinyos-main/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x7fdd2cd33190" loc="57:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x7fdd2cd30190" loc="72:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x7fdd2cd33900" loc="65:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/home/aj/w/tinyos-main/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/home/aj/w/tinyos-main/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x7fdd2cd281f0" loc="67:/home/aj/w/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/home/aj/w/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x7fdd2cd2cb90"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x7fdd2cd28a40" loc="75:/home/aj/w/tinyos-main/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/home/aj/w/tinyos-main/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/home/aj/w/tinyos-main/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/home/aj/w/tinyos-main/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x7fdd2cc60ac0" loc="76:/home/aj/w/tinyos-main/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/home/aj/w/tinyos-main/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/home/aj/w/tinyos-main/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/home/aj/w/tinyos-main/tos/platforms/micaz/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10;   notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above copyright&#10;   notice, this list of conditions and the following disclaimer in the&#10;   documentation and/or other materials provided with the&#10;   distribution.&#10; - Neither the name of the copyright holder nor the names of&#10;   its contributors may be used to endorse or promote products derived&#10;   from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL&#10; THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,&#10; INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;  $Id: hardware.h,v 1.8 2010-06-29 22:07:54 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x7fdd2cc401f0" loc="62:/home/aj/w/tinyos-main/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/home/aj/w/tinyos-main/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x7fdd2ccd7470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/home/aj/w/tinyos-main/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/home/aj/w/tinyos-main/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x7fdd2cc79b80" loc="52:/home/aj/w/tinyos-main/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/home/aj/w/tinyos-main/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2ca49540" loc="53:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2ca49540"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fdd2ca402b0" loc="136:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="132:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdd2ca45b30" loc="83:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="80:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x7fdd2ca42900" loc="114:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="100:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fdd2ca42330" loc="114:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fdd2ca42670" loc="114:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x7fdd2ca43b40" loc="98:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="94:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x7fdd2ca3e350" loc="151:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="146:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x7fdd2ca40a40" loc="144:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="138:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fdd2ca43350" loc="92:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="86:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x7fdd2ca46110" loc="64:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="56:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fdd2ca49e30" loc="64:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x7fdd2ca41900" loc="129:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="116:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fdd2ca41330" loc="129:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x7fdd2ca41670" loc="129:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x7fdd2ca46bd0" loc="73:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="66:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fdd2ca46950" loc="73:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdd2ca45420" loc="78:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
        <documentation loc="75:/home/aj/w/tinyos-main/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="51:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
      <documentation loc="33:/home/aj/w/tinyos-main/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x7fdd2ca29020" loc="61:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="58:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x7fdd2ca297d0" loc="67:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="63:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x7fdd2ca27020" loc="72:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="69:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x7fdd2ca26020" loc="83:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="79:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x7fdd2ca257d0" loc="100:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="96:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdd2ca24020" loc="117:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="103:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LEDS_LED0, LEDS_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;&#10; @return a bitmask describing which LEDs are on and which are off&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x7fdd2ca277b0" loc="77:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="74:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdd2ca24b90" loc="134:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="120:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;&#10; @param  val   a bitmask describing the on/off settings of the LEDs&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x7fdd2ca24910" loc="134:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x7fdd2ca2a850" loc="56:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="53:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x7fdd2ca26800" loc="89:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="86:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x7fdd2ca25020" loc="94:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
        <documentation loc="91:/home/aj/w/tinyos-main/tos/interfaces/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/home/aj/w/tinyos-main/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2c9ce100" loc="53:/home/aj/w/tinyos-main/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2c9ce100"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fdd2c9cea20" loc="61:/home/aj/w/tinyos-main/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/home/aj/w/tinyos-main/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x7fdd2d387170"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2c9bd020" loc="57:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2c9bd020"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fdd2c9bd260" loc="57:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9bd260"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x7fdd2c9bdb80" loc="64:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="59:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9bd260"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x7fdd2c9bbc80" loc="76:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="73:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x7fdd2c9bb420" loc="71:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="66:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fdd2c9ba420" loc="82:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
        <documentation loc="78:/home/aj/w/tinyos-main/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x7fdd2c9ca690" loc="56:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x7fdd2c9ca690"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x7fdd2c9ca8d0" loc="56:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x7fdd2c9c34a0" loc="109:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdd2c9c54e0" loc="78:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x7fdd2c9c4ae0" loc="103:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x7fdd2c9c4510" loc="103:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          </variable>
          <variable name="dt" ref="0x7fdd2c9c4850" loc="103:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x7fdd2c9c5cc0" loc="88:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x7fdd2c9c3c90" loc="116:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fdd2c9c74d0" loc="66:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x7fdd2c9c7250" loc="66:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9ca8d0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdd2c9c7d00" loc="73:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/home/aj/w/tinyos-main/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerCtrl8" loc="76:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
      <documentation loc="67:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit timer control registers&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getInterruptFlag" ref="0x7fdd2c98c3e0" loc="89:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="88:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt flag register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getInterruptMask" ref="0x7fdd2c98d1f0" loc="85:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="84:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Interrupt mask register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlA" ref="0x7fdd2c994d90" loc="79:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <documentation loc="78:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
          <short>Timer control register: Direct access</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptMask" ref="0x7fdd2c98dbe0" loc="86:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mask" ref="0x7fdd2c98d960" loc="86:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlB" ref="0x7fdd2c98e9c0" loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fdd2c98e740" loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptFlag" ref="0x7fdd2c98cde0" loc="90:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x7fdd2c98cb60" loc="90:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getControlB" ref="0x7fdd2c990560" loc="80:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setControlA" ref="0x7fdd2c98e020" loc="81:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
        <interfacedef-ref qname="HplAtm128TimerCtrl8"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="control" ref="0x7fdd2c990c80" loc="81:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerCtrl8.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128TimerAsync" loc="51:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
      <documentation loc="45:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <short>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; </short>
        <long>&#10; HPL Interface to Atmega1281 8-bit asynchronous timer control registers&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="compareBBusy" ref="0x7fdd2c97b270" loc="92:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="88:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2B is busy (should not be updated if true)&#10; @return TRUE if OCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setTimer2Asynchronous" ref="0x7fdd2c97d190" loc="68:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="65:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Turn on timer 2 asynchronous mode&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlABusy" ref="0x7fdd2c97d910" loc="74:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="70:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2A is busy (should not be updated if true)&#10; @return TRUE if TCCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="controlBBusy" ref="0x7fdd2c97c190" loc="80:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="76:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if control register TCCR2B is busy (should not be updated if true)&#10; @return TRUE if TCCR2B is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="countBusy" ref="0x7fdd2c97ba80" loc="98:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="94:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if current timer value (TCNT2) is busy (should not be updated if true)&#10; @return TRUE if TCNT2 is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareABusy" ref="0x7fdd2c97c9c0" loc="86:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="82:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; </short>
          <long>&#10; Check if compare register OCR2A is busy (should not be updated if true)&#10; @return TRUE if OCR2A is busy, FALSE otherwise (can be updated)&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAssr" ref="0x7fdd2c982e70" loc="57:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="53:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Read timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Read timer2 asynchronous status register (ASSR)&#10; @return Current value of ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fdd2cc91da0"/>
            <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fdd2cc90230"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAssr" ref="0x7fdd2c97e8e0" loc="63:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
        <documentation loc="59:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
          <short>&#10; Set timer2 asynchronous status register (ASSR)&#10; </short>
          <long>&#10; Set timer2 asynchronous status register (ASSR)&#10; @param x New value for ASSR&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128TimerAsync"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fdd2cc91da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fdd2cc90230"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="x" ref="0x7fdd2c97e660" loc="63:/home/aj/w/tinyos-main/tos/chips/atm1281/timer/HplAtm128TimerAsync.nc">
            <type-tag size="I:1" alignment="I:1"><union-ref ref="0x7fdd2cc91da0"/>
              <typename><typedef-ref name="Atm128_ASSR_t" ref="0x7fdd2cc90230"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Compare" loc="41:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <short>&#10; HPL Interface to Atmega128 compare registers.</short>
        <long>&#10; HPL Interface to Atmega128 compare registers.&#10; @param size_type Integer type of compare register&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="size_type" ref="0x7fdd2c9938b0" loc="41:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <interfacedef-ref qname="HplAtm128Compare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9938b0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="test" ref="0x7fdd2c985270" loc="74:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Did compare interrupt occur? &#10; </short>
          <long> &#10; Did compare interrupt occur? &#10; @return TRUE if compare triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x7fdd2c987420" loc="58:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="57:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Signalled on  interrupt.</short>
          <long> Signalled on  interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdd2c988270" loc="48:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="44:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Get the compare time to fire on.</short>
          <long> &#10; Get the compare time to fire on.&#10; @return  the compare time value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9938b0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fdd2c987b90" loc="62:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="61:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Clear the compare interrupt flag.</short>
          <long> Clear the compare interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fdd2c985a30" loc="80:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="76:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Is compare interrupt on?&#10; </short>
          <long> &#10; Is compare interrupt on?&#10; @return TRUE if compare enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdd2c988c30" loc="54:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="50:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> &#10; Set the compare time to fire on.</short>
          <long> &#10; Set the compare time to fire on.&#10; @param t     the compare time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9938b0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fdd2c9889b0" loc="54:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x7fdd2c9938b0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fdd2c986350" loc="65:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="64:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Enable the compare interrupt.</short>
          <long> Enable the compare interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdd2c986aa0" loc="68:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
        <documentation loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Compare.nc">
          <short> Turn off comparee interrupts.</short>
          <long> Turn off comparee interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Compare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Timer" loc="55:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
      <documentation loc="34:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <short>&#10; Basic interface to the hardware timers on an ATmega128.</short>
        <long>&#10; Basic interface to the hardware timers on an ATmega128.  &#10; &#60;p>&#10; This interface is designed to be independent of whether the underlying &#10; hardware is an 8-bit or 16-bit wide counter.  As such, timer_size is &#10; specified via a generics parameter.  Because this is exposing a common &#10; subset of functionality that all ATmega128 hardware timers share, all &#10; that is exposed is access to the overflow capability.  Compare and capture&#10; functionality are exposed on separate interfaces to allow easy &#10; configurability via wiring.&#10; &#60;p>&#10; This interface provides four major groups of functionality:&#60;ol>&#10;      &#60;li>Timer Value: get/set current time&#10;      &#60;li>Overflow Interrupt event&#10;      &#60;li>Control of Overflow Interrupt: start/stop/clear...&#10;      &#60;li>Timer Initialization: turn on/off clock source&#10; &#60;/ol>&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="timer_size" ref="0x7fdd2c9a2d50" loc="55:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <interfacedef-ref qname="HplAtm128Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fdd2c9a2d50"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="off" ref="0x7fdd2c9997b0" loc="98:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="97:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off the clock.</short>
          <long> Turn off the clock. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x7fdd2c99b7a0" loc="87:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="83:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Did an overflow interrupt occur?&#10; </short>
          <long> &#10; Did an overflow interrupt occur?&#10; @return TRUE if overflow triggered, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x7fdd2c99e6b0" loc="61:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="57:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get the current time.</short>
          <long> &#10; Get the current time.&#10; @return  the current time&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fdd2c9a2d50"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setScale" ref="0x7fdd2c9982a0" loc="104:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="100:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Turn on the clock.</short>
          <long> &#10; Turn on the clock.&#10; @param scale   Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x7fdd2c998020" loc="104:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getScale" ref="0x7fdd2c998aa0" loc="110:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="106:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Get prescaler setting.</short>
          <long> &#10; Get prescaler setting.&#10; @return  Prescaler setting of clock -- see Atm128Timer.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x7fdd2d389ad0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x7fdd2c99c020" loc="75:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="74:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Clear the overflow interrupt flag.</short>
          <long> Clear the overflow interrupt flag. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x7fdd2c99d840" loc="70:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="69:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Signalled on timer overflow interrupt.</short>
          <long> Signalled on timer overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x7fdd2c999020" loc="93:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="89:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Is overflow interrupt on? &#10; </short>
          <long> &#10; Is overflow interrupt on? &#10; @return TRUE if overflow enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x7fdd2cd5b500"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x7fdd2c99d0b0" loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="63:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> &#10; Set the current time.</short>
          <long> &#10; Set the current time.&#10; @param t     the time to set&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fdd2c9a2d50"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x7fdd2c99ede0" loc="67:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="timer_size" scoped="" ref="0x7fdd2c9a2d50"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x7fdd2c99c790" loc="78:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="77:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Enable the overflow interrupt.</short>
          <long> Enable the overflow interrupt. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x7fdd2c99b020" loc="81:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
        <documentation loc="80:/home/aj/w/tinyos-main/tos/chips/atm128/timer/HplAtm128Timer.nc">
          <short> Turn off overflow interrupts.</short>
          <long> Turn off overflow interrupts. *</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
